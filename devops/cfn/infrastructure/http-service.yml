Parameters:

  VpcId:
    Type: AWS::EC2::VPC::Id

  SecurityGroup:
    Type: String

  Cluster:
    Type: String

  ApplicationName:
    Type: String

  Repository:
    Type: String

  Tag:
    Type: String

  Command:
    Type: List<String>

  DesiredCount:
    Type: Number
    Default: 2

  Memory:
    Type: Number
    Default: 512

  MemoryReservation:
    Type: Number
    Default: 512

  ContainerPort:
    Type: Number

  Listener:
    Description: The Application Load Balancer listener to register with
    Type: String
    Default: AWS::NoValue

  Path: 
      Description: The path to register with the Application Load Balancer
      Type: String
      Default: /*

  HealthCheckPath:
    Type: String
    Default: /healthcheck

  NodeEnv:
    Type: String
    Default: production
  
  RedisCacheHost:
    Type: String
    Default: AWS::NoValue

  RedisPubSubHost:
    Type: String
    Default: AWS::NoValue

  RedisPubSubChannel:
    Type: String
    Default: AWS::NoValue

  BackendHost:
    Type: String
    Default: AWS::NoValue

  BackendPort:
    Type: String
    Default: AWS::NoValue

  TabulaUrl:
    Type: String
    Default: AWS::NoValue

  HttpProxy:
    Type: String
    Default: AWS::NoValue

  NoProxy:
    Type: String
    Default: AWS::NoValue

  AlarmTopic:
    Type: String
    Default: AWS::NoValue

  ElasticLoadBalancerName:
    Type: String
    Default: AWS::NoValue

  CapiV2:
    Type: String
    Default: AWS::NoValue

  CapiV3:
    Type: String
    Default: AWS::NoValue

  NewRelicAppName:
    Type: String
    Default: AWS::NoValue

  NewRelicLicenseKey:
    Type: String
    Default: AWS::NoValue
  
  LogLevel:
    Type: String
    Default: error

Conditions:

  CreateAlarm: !Not [!Equals [!Ref AlarmTopic, "AWS::NoValue"]]

  NewRelicEnabled: !Not [!Equals [!Ref NewRelicLicenseKey, "AWS::NoValue"]]

Resources:
  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceRole

  Service:
    Type: AWS::ECS::Service
    DependsOn: ListenerRule
    Properties:
      Cluster: !Ref Cluster
      Role: !Ref ECSServiceRole
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: !Ref ApplicationName
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-${ApplicationName}
      ContainerDefinitions:
        - Name: !Ref ApplicationName
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}:${Tag}
          Command: !Ref Command
          Essential: true
          Memory: !Ref Memory
          MemoryReservation: !Ref MemoryReservation
          PortMappings:
            - ContainerPort: !Ref ContainerPort
          Environment:
            - Name: Tag
              Value: !Ref Tag
            - Name: PORT
              Value: !Ref ContainerPort   
            - Name: NODE_ENV
              Value: !Ref NodeEnv
            - Name: REDIS_CACHE_HOST
              Value: !Ref RedisCacheHost
            - Name: REDIS_PUB_SUB_HOST
              Value: !Ref RedisPubSubHost
            - Name: REDIS_PUB_SUB_CHANNEL
              Value: !Ref RedisPubSubChannel
            - Name: BACKEND_HOST
              Value: !Ref BackendHost
            - Name: BACKEND_PORT
              Value: !Ref BackendPort
            - Name: TABULA_URL
              Value: !Ref TabulaUrl
            - Name: http_proxy
              Value: !Ref HttpProxy
            - Name: https_proxy
              Value: !Ref HttpProxy
            - Name: no_proxy
              Value: !Ref NoProxy
            - Name: CAPI_V2_URL
              Value: !Ref CapiV2
            - Name: CAPI_V3_URL
              Value: !Ref CapiV3
            - Name: NEW_RELIC_LICENSE_KEY
              Value: !Ref NewRelicLicenseKey
            - Name: NEW_RELIC_APP_NAME
              Value: !Ref NewRelicAppName
            - Name: NEW_RELIC_NO_CONFIG_FILE
              Value: true
            - Name: NEW_RELIC_LOG_LEVEL
              Value: info
            - Name: NEW_RELIC_PROXY_URL
              Value: !Ref HttpProxy
            - Name: NEW_RELIC_ENABLED
              Value: !If [NewRelicEnabled, true, false]
            - Name: LOG_LEVEL
              Value: !Ref LogLevel
          LogConfiguration:
            LogDriver: sumologic
            Options:
              sumo-url: https://collectors.au.sumologic.com/receiver/v1/http/ZaVnC4dhaV0elbWzKIF7LcHuVg-nhVE_aH119Nzu5oTRTbTzxAvmdQWhyQdWIfNtkzZkxWOI4E76hNDIQAhxJMW-fReFgvh0Hp74oY3-LEQFAxwxmL4Lvw==

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
        LogGroupName: !Ref AWS::StackName
        RetentionInDays: 3

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
        ListenerArn: !Ref Listener
        Priority: 1
        Conditions:
            - Field: path-pattern
              Values: 
                - !Ref Path
        Actions:
            - TargetGroupArn: !Ref TargetGroup
              Type: forward

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Ref AWS::StackName
      VpcId: !Ref VpcId
      Port: !Ref ContainerPort
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: !Ref HealthCheckPath
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 30

  CloudWatchAlarmHealthyHosts:
    Condition: CreateAlarm
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Alarm if HealthyHostCount is less then 1
      Namespace: AWS/ApplicationELB
      MetricName: HealthyHostCount
      Statistic: Average
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: LessThanThreshold
      AlarmActions:
        - !Ref AlarmTopic
      InsufficientDataActions:
        - !Ref AlarmTopic 
      OKActions:
        - !Ref AlarmTopic
      Dimensions: [{ Name: LoadBalancer, Value: !Ref ElasticLoadBalancerName }, { Name: TargetGroup, Value: !GetAtt TargetGroup.TargetGroupFullName }]
